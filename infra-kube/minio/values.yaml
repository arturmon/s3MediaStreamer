auth:
  rootUser: admin
  rootPassword: "12345678"
#defaultBuckets: "music-bucket"
disableWebUI: false
persistence:
  storageClass: "local-path"
  size: 20Gi
extraEnvVars:
  - name: MINIO_NOTIFY_AMQP_ENABLE
    value: "on"
  - name: MINIO_NOTIFY_AMQP_URL
    value: "amqp://guest:guest@s3stream-rabbitmq:5672"
  - name: MINIO_NOTIFY_AMQP_EXCHANGE
    value: "s3_exchange"
  - name: MINIO_NOTIFY_AMQP_EXCHANGE_TYPE
    value: "fanout"
  - name: MINIO_NOTIFY_AMQP_DURABLE
    value: "on"
  - name: MINIO_NOTIFY_AMQP_DELIVERY_MODE
    value: "2"
ingress:
  enabled: true
  ingressClassName: "nginx"
  hostname: minio.localhost
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 999m
apiIngress:
  enabled: true
  ingressClassName: "nginx"
  hostname: minio-api.localhost
provisioning:
  enabled: true
  policies:
    - name: music-bucket-bucket-specific-policy
      statements:
        - resources:
            - "arn:aws:s3:::*"
          effect: "Allow"
          actions:
            - "s3:GetBucketLocation"
            - "s3:ListBucket"
            - "s3:GetObject"
            - "s3:DeleteObject"
            - "s3:PutObject"
  config:
    - name: region
      options:
        name: us-east-1
  buckets:
    - name: music-bucket
      region: us-east-1
      versioning: Versioned
  users:
    - username: app
      password: E7ct9Zr1rOu0ZJZLxTqv
      disabled: false
      setPolicies: true
      policies:
        - music-bucket-bucket-specific-policy
  extraCommands: ["mc event add provisioning/music-bucket arn:minio:sqs:us-east-1:_:amqp"]
