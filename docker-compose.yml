version: '3.5'
services:
  postgresql:
    container_name: postgres
    image: bitnami/postgresql:latest
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgresql_data:/bitnami/postgresql
    environment:
      - POSTGRESQL_USERNAME=root
      - POSTGRESQL_PASSWORD=1qazxsw2
      - POSTGRESQL_DATABASE=db_issue_album

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    restart: unless-stopped
    ports:
      - 9187:9187
    environment:
      DATA_SOURCE_NAME: "postgresql://root:1qazxsw2@postgres:5432/postgres?sslmode=disable"
    depends_on:
      - postgresql

  redis:
    container_name: redis
    image: bitnami/redis:latest
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes

  memcache:
    container_name: memcache
    image: bitnami/memcached:latest

  mongodb:
    container_name: mongo-db
    image: bitnami/mongodb:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/bitnami/mongodb
    environment:
      - MONGODB_ROOT_PASSWORD=1qazxsw2
      - MONGODB_USERNAME=root
      - MONGODB_PASSWORD=1qazxsw2
      - MONGODB_DATABASE=db_issue_album

  rabbitmq:
    container_name: rabbit
    image: rabbitmq:3-management
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
      - "15692:15692"
    volumes:
      - ./infra/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./infra/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro

  minio:
    container_name: minio-server
    image: bitnami/minio:latest
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=12345678
      - MINIO_DEFAULT_BUCKETS=music-bucket:none
      - MINIO_BROWSER=on
      - CONSOLE_SECURE_TLS_REDIRECT=off
      - MINIO_NOTIFY_AMQP_ENABLE=on
      - MINIO_NOTIFY_AMQP_URL=amqp://guest:guest@rabbit:5672
      - MINIO_NOTIFY_AMQP_EXCHANGE=s3_exchange
      - MINIO_NOTIFY_AMQP_EXCHANGE_TYPE=fanout
      - MINIO_NOTIFY_AMQP_DURABLE=on
      - MINIO_NOTIFY_AMQP_DELIVERY_MODE=2
    volumes:
      - /home/amudrykh/minio_data:/data
    depends_on:
      - rabbitmq

  minio-mc:
    container_name: minio-mc
    image: bitnami/minio-client:latest
    environment:
      - MINIO_SERVER_HOST=minio-server
      - MINIO_SERVER_ACCESS_KEY=admin
      - MINIO_SERVER_SECRET_KEY=12345678
    entrypoint: >
      /bin/sh -c "
      mc config host add myminio http://minio-server:9000 admin 12345678;
      mc mb myminio/music-bucket;
      mc version enable myminio/music-bucket;
      mc event add myminio/music-bucket arn:minio:sqs:us-east-1:_:amqp;
      "
    depends_on:
      - minio

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./infra/prometheus:/etc/prometheus
      - prom_data:/prometheus

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - ./infra/grafana:/etc/grafana/provisioning/datasources
      - ./infra/grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./infra/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus

  consul:
    image: hashicorp/consul:1.16.5
    command: consul agent -dev -client=0.0.0.0
    restart: unless-stopped
    ports:
      - "8500:8500"
      - "8600:8600/tcp"
      - "8600:8600/udp"

volumes:
  postgresql_data:
    driver: local
  mongodb_data:
    driver: local
  prom_data:
